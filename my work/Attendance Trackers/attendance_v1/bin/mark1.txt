#include<iostream>
#include<fstream>
#include<string.h>
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<ctime>

using namespace std;

class attn
{
    char subName[30];
    int P;
    int A;
    int T;
    bool bunk;
    int dd;
    int mm;
    int yyyy;
public:
    attn()
    {
        P=0;
        A=0;
        T=0;
        bunk=false;
        dd=0;
        mm=0;
        yyyy=0;
    }
    void disp()
    {
        cout<<"----"<<subName<<"----"<<endl;
        cout<<"present :"<<P<<endl;
        cout<<"absent :"<<A<<endl;
        cout<<"total :"<<T<<endl;
        cout<<"bunk :"<<bunk<<endl;
        cout<<dd<<"-"<<mm<<"-"<<yyyy<<endl;
    }
    void askInp(int);
};

/// ////
tm* get_node()
{
  time_t tym;
  tm *node;
  time(&tym);
  node=localtime(&tym);
  return node;
}

/// ////
void DispDay(int n)
{
    switch(n)
        {
        case 0:cout<<"Sunday"<<endl;
                break;
        case 1:cout<<"Monday"<<endl;
                break;
        case 2:cout<<"Tuesday"<<endl;
                break;
        case 3:cout<<"Wednesday"<<endl;
                break;
        case 4:cout<<"Thursday"<<endl;
                break;
        case 5:cout<<"Friday"<<endl;
                break;
        }
}

/// /////////////////////////////////////
/// ////////////SET UP///////////////////
/// /////////////////////////////////////
int nOfPe=0;
/// /////////////////////////////////////
void write_ttbl()
{
    int timeTbl[5][10];///store the periods
    char sub[20][30],ig[2];///store subject names
    int nOfSub=0;
    cout<<"enter number of subjects:";
    cin>>nOfSub;
    gets(ig);///to handle enter button
    for(int i=0;i<nOfSub;i++)
    {
        cout<<"enter subject "<<i+1<<" :";
        gets(sub[i]); ///enter subject names
    }
    cout<<"enter number of periods:";
    cin>>nOfPe; ///enter number of periods max.
    for(int j=0;j<5;j++)
    {
        system("cls");
        for(int k=0;k<nOfSub;k++)
           cout<<"-> "<<k+1<<" "<<sub[k]<<endl;
        DispDay(j);
     for(int i=0;i<nOfPe;i++)
     {
        cout<<"enter subject "<<i+1<<" :";
        cin>>timeTbl[j][i];
        timeTbl[j][i]-=1;
     }
    }
    ofstream subname("subjects.txt");
    ofstream ttbl("timetable.txt");
    for(int i=0;i<nOfSub;i++)///write subjects into file
        subname<<sub[i]<<endl;
    for(int i=0;i<5;i++)
        for(int j=0;j<nOfPe;j++)
          ttbl<<timeTbl[i][j]<<endl;
    ttbl<<nOfPe<<endl;/// last element of ttbl.txt
    subname.close();
    ttbl.close();
}
/// /////////////////////////////////////
/// ///////////////RUN///////////////////
/// /////////////////////////////////////

int ttbl[10];/// for reading subjects
char subjects[20][30];/// subjects for each day

void getPrd()///get subjects for each day
{
    int j=0,ext[50]; ///extract
    ifstream fin("timetable.txt");
    int n,c=0;
    while(fin>>n) ///read data
    {
        ext[c]=n;
        c++;
    }
    nOfPe=ext[--c]; /// last element stored in ttbl.txt
    int day=get_node()->tm_wday;

    int init=day*2;
    for(int i=init,j=0;i<init+nOfPe;i++,j++)
    {
      ttbl[j]=ext[i];
    }
    fin.close();
    char temp[20][30];
    char t[30];
    int k=0;
    ifstream fin1("subjects.txt");
    while(fin1.getline(t,30,'\n'))
    {
        strcpy(temp[k],t);
        k++;
    }
    for(int i=0;i<nOfPe;i++)
    {
        strcpy(subjects[i],temp[ttbl[i]]);
    }
    fin1.close();
}

void attn::askInp(int n)/// asks for input of subjects acc. to time table
{
///initialize values of P A T for last subject;
         strcpy(subName,subjects[n]);
        cout<<"-----enter for "<<subName<<"-----"<<endl;
        cout<<"enter P=present A=absent B=bunk"<<endl;
            char inp;
                cin>>inp;
                switch(inp)
                {
                    case 'p':
                    case 'P':P++;
                            T++;
                        break;
                    case 'a':
                    case 'A':A++;
                            T++;
                        break;
                    case 'b':
                    case 'B':A++;
                            T++;
                            bunk=true;
                        break;
                }
                dd=get_node()->tm_mday;
                mm=get_node()->tm_mon;
                yyyy=get_node()->tm_year+1900;

}

void inp_daily()
{
    getPrd();
    attn node;
    ofstream wrAtn("attendance.dat",ios::binary|ios::app);
    for(int i=0;i<nOfPe;i++)
    {
       node.askInp(i);
        wrAtn.write((char*)&node,sizeof(attn));
    }
    wrAtn.close();
}

/// ////
void readAttn()
{
    attn node;
    ifstream reAtn("attendance.dat",ios::binary|ios::app);
     while(reAtn.read((char*)&node,sizeof(attn)))
        node.disp();
    reAtn.close();
}



int main()
{
    ifstream chk("timetable.txt");
    if(!chk)
    {
        write_ttbl(); ///for initial setup
    }
    else
    {
        cout<<"------MENU------"<<endl;
        cout<<"   1      enter todays data"<<endl;
        cout<<"   2      view attendance"<<endl;
        cout<<"   3      edit attendance"<<endl;
        cout<<" YOUR CHOICE:";
        int ch;
        cin>>ch;
        switch(ch)
        {
            case 1:inp_daily();
                break;
            case 2:readAttn();
                break;

        }
    }
}

